/**
 *  Copyright: (C) 2013 by Agustin Alvarez.
 *            All rights reserved
 *
 * License: Boost Software License version 1.0
 *
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 *
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 */
#include <GhrumAPI/GhrumAPI.hpp>

/**
 * Function that run in every tick
 */
void runEveryTick() {
    // Do something here....

    // An async cannot be repetitive by default, but we push it again.
    Ghrum::GhrumAPI::getScheduler().asyncTask(*myPlugin, runEveryTick);
}

/**
 * Function that run every 10 minutes.
 */
void runEvery10Minute() {
    auto playerList = Ghrum::GhrumAPI::getEngine().getWorld().getPlayerList();
    // Loop on each player.
    for ( auto & player : playerList ) {
        // Throw a random number from 0 to 100
        uint32_t number = Random(0, 100);
        // if the number is below 5 reward the player with 100 experience point, and
        // let him know about it.
        if ( number <= 5 ) {
            player.setExperience( player.getExperience() + 100 );
            player.setMessage( "You have been awarded with %%<R>100 %%<W>experience point." );
        }
    }
    // An async cannot be repetitive by default, but we push it again.
    Ghrum::GhrumAPI::getScheduler().asyncDelayedTask(
            Ghrum::GhrumAPI::getPluginManager().getPlugin("MyPlugin"), 
            runEvery10Minute,
            Ghrum::TaskPriority::TaskLow, 10 * 1000 * 1000);
}

/**
 * Function called when the plugin has been enabled.
 *
 * @param plugin reference to this plugin
 */
EXPORT void onPluginEnable(Ghrum::IPlugin & plugin) {
    Ghrum::GhrumAPI::getScheduler().asyncTask(plugin, runEveryTick);
    Ghrum::GhrumAPI::getScheduler().asyncDelayedTask(plugin, runEvery10Minute,
            Ghrum::TaskPriority::TaskLow, 10 * 1000 * 1000 * 20);
}